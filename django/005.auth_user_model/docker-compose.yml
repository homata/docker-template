version: "3.7"
services:
  django:
    # コンテナ名
    container_name: django
    # ビルドするdockerファイルが格納されたディレクトリ
    build: ./django
    # サービス起動後に入力されるコマンドを設定 (Debug)
    command: python3 manage.py runserver 0.0.0.0:8000
    # 正常起動後に実行するコマンド (Product)
    # command: gunicorn config.wsgi:application --bind 0.0.0.0:8000
    # 擬似端末(キーボードによる入力)をコンテナに結びつける設定
    # コンテナが起動し続ける
    # tty: true
    volumes:
      # マウントするディレクトリ
      - ./django:/usr/src/app/
    ports:
      # ホスト側のポート：コンテナ側のポート
      - 8000:8000
    env_file:
      # 環境変数に設定するファイル
      - ./django/.env_app
    depends_on:
      # 接続するサービス
      - postgres
    networks:
      - back

  postgres:
    container_name: postgres
    build: ./postgres
    volumes:
      # DBのデータはボリュームを作成して保存
      # ディレクトリとマウントとって実データをホストOSに直接残しても良い
      # /var/lib/postgresql/dataにDBのデータが格納されている
      # - postgis_data:/var/lib/postgresql/data
      - ./.postgis_data:/var/lib/postgresql/data
      # down -vなどでボリュームがない時などを含めた初回起動時に実行されるファイルを指定
      - ./postgres/sql:/docker-entrypoint-initdb.d
    env_file: ./postgres/.env_db
    ports:
      # ホスト側のポートはローカルのpsqlとバッティングするので5432以外にする
      - 5433:5432
    networks:
      - back

#  nginx:
#    container_name: nginx
#    build: ./nginx
#    volumes:
#      - ./django/staticfiles:/usr/src/app/staticfiles
#    ports:
#      - 80:80
#    depends_on:
#      - django
#    networks:
#      - back

#  pgadmin4:
#    container_name: pgadmin4
#    image: dpage/pgadmin4:latest
#    volumes:
#      - pgadmin4:/var/lib/pgadmin
#    environment:
#      - PGADMIN_DEFAULT_EMAIL=hoge@fuga.com
#      - PGADMIN_DEFAULT_PASSWORD=password
#    ports:
#      - 5555:80
#    depends_on:
#      # 接続するサービス
#      - postgres
#    links:
#      - postgres
#    networks:
#      - back

# volumes:
#  postgis_data:
volumes:
  pgadmin4:

networks:
  back:
    external: false


